name: pipeline

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: write   # needed to upload SARIF to "Code scanning alerts"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4.0

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: gosec
        run: |
          gosec -conf .gosec.json ./...

      - name: gosec reports (SARIF + HTML)
        if: always()
        run: |
          mkdir -p reports
          gosec -conf .gosec.json -fmt sarif -out reports/gosec.sarif ./... || true
          gosec -conf .gosec.json -fmt html  -out reports/gosec.html  ./... || true

      - name: Upload SARIF to Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/gosec.sarif

      - name: Upload HTML report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gosec-html
          path: reports/gosec.html
          if-no-files-found: ignore
  release:
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute & create next minor tag
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
          REPO: ${{ github.repository }}
        shell: bash
        run: |
          set -euo pipefail

          git fetch --tags

          latest=$(git tag --list 'v[0-9]*' --sort=-v:refname | head -n1 || true)
          if [ -z "$latest" ]; then
            latest="v0.0.0"
          fi
          echo "prev_tag=$latest" >> "$GITHUB_OUTPUT"

          ver=${latest#v}
          IFS='.' read -r major minor patch <<< "$ver"
          minor=$((minor + 1))
          patch=0
          new_tag="v${major}.${minor}.${patch}"

          # If tag already exists remotely, skip creating/pushing it
          if git rev-parse -q --verify "refs/tags/$new_tag" >/dev/null || \
             git ls-remote --tags "https://github.com/${REPO}.git" "refs/tags/$new_tag" | grep -q "$new_tag"; then
            echo "Tag $new_tag already exists. Skipping tag creation."
          else
            git config user.name  "${GITHUB_ACTOR}"
            git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
            git tag -a "$new_tag" -m "chore: bump minor version to $new_tag"
            git push "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${REPO}" "$new_tag"
          fi

          echo "new_tag=$new_tag" >> "$GITHUB_OUTPUT"

      # (Optional) pull artifact(s) from the CI job to attach to the release
      - name: Download gosec HTML report
        uses: actions/download-artifact@v4
        with:
          name: gosec-html
          path: artifacts
        continue-on-error: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          name: ${{ steps.tag.outputs.new_tag }}
          body: |
            ## Whatâ€™s in this release
            - Automated minor bump from ${{ steps.tag.outputs.prev_tag }} to ${{ steps.tag.outputs.new_tag }}.
            - Includes security scan artifact (gosec HTML) from CI.

            _Consider replacing this section with a generated changelog from your commits._
          draft: false
          prerelease: false
          files: |
            artifacts/gosec.html
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}